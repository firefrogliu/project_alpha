
\section{FPVA test with flow paths and cut-sets}\label{sec:test_method}

In this section we explain the strategy to test an FPVA 
and the implementation of the test method. 
%The discussion will focus on flow path
%construction. The cut-set test vectors are generated by adapting
%the algorithm for flow path construction. 
Although omitted from this paper due to the space limit, 
leakage at the control layer can also be detected by adapting the valve
coverage problem described in this section.
For convenience, we refer
to a pressure source simply as a source port, and to a pressure meter port
as a sink port in the following discussion. 

\subsection{Test strategy for an FPVA}\label{sec:test_stratergy}

%In testing a valve array, we apply a set of test vectors and observe the
%results of the pressure sensors at the outputs. 
%The results of all test vectors are
%compared with expected pressure values. If there is a discrepancy,
%at least a fault exists in the chip.  

To identify whether a fault exists in a chip, the test vectors should
%keep the effect 
ensure that an error is
observable when valves are switched.  For example, if no
test vector opens a valve during the test process, the only fault that can be
observed at this valve is the leakage fault (stuck-at-1 fault) and the fault that
the valve cannot be opened (stuck-at-0 fault) is not tested. 
%because the valve
%is never tested by setting it to the open state.  
Therefore, the test vectors should
switch a valve open at least once and closed at least
once during test application to detect %the potential 
stuck-at-0 and
stuck-at-1 faults at this valve.  
For each case, the effect of the correct behavior of
the valve should be observable at sink ports.  For example, if a valve is
switched open, there should be at least one path from the source through this
valve to the sink to detect the pressure being transmitted through this valve.

When test vectors are applied, some faults might mask each other.  For example, if
another path that circumvents the valve under test connects the pressure
source and the sink port, the potential stuck-at-0 fault (always closed) 
at the valve under test may be masked and thus cannot be observed. 
This situation is illustrated in
\figname~\ref{fig:path_cutset}(a).   In this example, the two paths are created on
the chip at the same time, and thus the stuck-at-0 fault at the valve under
test cannot be detected because there is still a pressure %can still be detected 
at the
sink port due to the second path. To avoid this path interference problem, we
only construct simple paths without loops or branches. These paths are called
\textit{flow paths} henceforth.
% on the chip as test vectors. 
%\textit{
%Accordingly,
%we assume that only one source port for the input of the 
%pressure and one sink port for the pressure detection are used in the proposed test
%scenario.
%To detect all stuck-at-0 faults, the test vectors should contain
%only simple paths which cover each valve in the chip at least once to guarantee
%fault coverage.
%} 

%In addition, these paths should not cross with each other, or should not 
%bypass some valves in other paths, as shown in \figname~\ref{fig:path_mask}. 
Similar to constructing flow paths to detect stuck-at-0 faults,
%the test vectors to check whether valves can be opened, 
we construct cut-sets to detect stuck-at-1 faults. A \textit{cut-set} is formed
by a set of valves that %, if all are closed,
separate the source ports and the sink ports completely. 
%If all valves in a
%cut-set is closed, there should be no path from the pressure source to any
%sink port. 
In test application, 
%if a pressure is still detected at a sink
%port, there must exist one stuck-at-1 fault.
if all the valves in a cut-set are closed 
%by the test vector 
and a pressure is still detected by a pressure meter, 
%there must be a
%broken valve 
a stuck-at-1 fault must exist. %in the cut-set. 
%
%
%If there is no pressure detected at
%the sink, we can conclude that these valves can be closed correctly.  
%
%To reach
%this conclusion, there should be no path conducting pressure from the pressure
%%source to the sensor at the sink port.  Namely, a valve cut-set
%separating the source and sensor is formed. 
%
An example of such a cut-set is
illustrated in \figname~\ref{fig:path_cutset}(b), which disconnects any path
between the source and the sink. 


%Based on the analysis above, we define our test vectors as follows:

%\begin{easylist} 

%&\textit{Flow-path test vectors}: A set of flow paths between
%the source and the sink. These paths should cover each valve at least once. A
%flow path should be a simple path without a loop or a branch. 
%%so that there is no bypassing
%%path segment masking the stuck-at-0 faults at other valves. %on the path.
%In the testing process, the test vectors are applied one after another by
%enabling these paths individually. When applying one vector, only the valves on
%the corresponding flow path are opened, and all the other valves in the chip
%are closed. If there is no pressure detected after applying a flow-path vector, there
%must be a valve that cannot be opened.  
%%The number of such paths is denoted by $n_f$.
 
%&\textit{Cut-set test vectors}: 
%A set of cut-sets each of which is formed from
%a series of valves and separates the source and the sink. 
%These cut-sets should cover each valve at least once to test whether
%it can be closed. The vectors are applied one after another. If  pressure
%is detected after applying a vector, there must be a valve that cannot be
%closed.  %The number of such paths is denoted by $n_c$.
%
%\end{easylist}

%The flow paths and cut-sets, in total $n_f+n_c$ test vectors, can detect any
%single fault. If a valve cannot open, it must be captured by the flow path
%covering it, because all the other valves on the path can be opened and all
%the valves that are not on the path can be closed reliably, based on the
%single fault assumption. If a valve cannot be closed, it must be detected by a
%cut-set covering it, because all the other valves in the cut-set can be closed and all the
%valves not in the cut-set can be opened.  Therefore, there is always a subpath
%from the source to the faulty valve and a subpath from the faulty valve to the
%sink to conduct the  pressure. 

\begin{figure*}[t]
{\figurefontsize
\centering
\input{Fig/flow_path_model.pdf_tex}
\caption{Flow path model. (a) Constraint variables for valves and cells. (b)
Path construction using constraints. (c) Disjoint loop. (d) Flow constraints
along a disjoint loop.}
\label{fig:flow_path_model}
}
\end{figure*}

In a scenario with multiple faults, the flow-path and cut-set vectors
discussed above, however,
cannot guarantee that a fault can always be detected.
Assume that there are two faulty valves, one of which cannot be 
opened (valve 1, stuck-at-0) and the other cannot be closed (valve 2,
stuck-at-1). 
Also assume that the flow path 
used to test valve 1 is constructed as shown in  
\figname~\ref{fig:path_cutset}(c), and 
the cut-set used to test valve 2 is constructed as shown 
in \figname~\ref{fig:path_cutset}(d). In 
\figname~\ref{fig:path_cutset}(c), the pressure leakage through valve 2 masks the
stuck-at-0 fault at valve 1. In \figname~\ref{fig:path_cutset}(d), the
pressure leakage through valve 2 is blocked by valve 1. In both cases, the
results at the pressure meter are still correct, so that these two
faults cannot be detected. %by the generated flow paths and cut-sets.
Consequently, mutual masking patterns of this type should be excluded from the generated
test vectors. %to improve test coverage.
%fault, we generate cut-sets without the pattern shown in  

%When testing the flow path, the stuck-at-1 valve leaks the pressure so
%that the stuck-at-0 valve can be by passed and sensor can still detect a
%%presure. When testing whether the stuck-at-1 valve can be closed, all the
%valves in the cut-set are closed. In this case, the stuck-at-0 valve forms a
%new cut-set with the valves above it and all  paths are blocked by this
%newly formed vertical cut-set. Consueqently,
%the two faults cover with each other and the flow-path test and cut-set test do not report
%any fault. 

%To improve test vectors to recognize more than one
%fault, we generate cut-sets without the pattern shown in  
%\figname~\ref{fig:path_cutset}c-d. The reason that the two faults mask each is
%that only one new valve is needed to form a new cut-set together with some
%valves from the given cut-set. If this new valve is accidentally faulty, the
%mask problem appears. Therefore, we add 
%additional constraints in our model to disable such patterns from being formed
%when generating cut-sets. Consequently, at least two valves must be faulty to
%block the flow leaked from a valve that cannot be closed.
%%, e.g., valve 1 in \figname~\ref{fig:path_cutset}c-d.
%Note that a similar constraint can be added to flow paths to disable the
%mutual masking problem too. However, it is very difficult to prove that by adding
%these constraints together the detection of more than two faults can be
%guaranteed. 

%Another fault mask case is shown in \figname~\ref{fig:double_fault_maskt}(c),
%where a cur-set may be masked by the other valves that can never been opened.
%In the right case, valve 1 cannot be closed but this fault is masked by the
%three valves forming a half circle on the right. The faulty valves forms a new
%cut-set with the other valves in the original cut-set, so that any paths from
%the source to the sink can be blocked. In the other case,  if valve 5 cannot
%be closed, it can be masked by only two valves on its left so that not fault
%can be detected. In both cases, we can see that a cut-set can be mask by
%minimal two faulty valves. If these faulty valves cannot be detected, the
%flow-path and cut-set test vectors cannot detect more than three faults. 

%The limitation that the test vectors cannot guarantee to detect more than two
%faults comes from the path construction formulation. To expand the testability
%to more than two faults requires a more thorough path enumeration, which takes
%a lot of runtime so that is not preferable due to the resulting test
%cost. The proposed method is actually a tradeoff between test cost and fault
%observability. 

%The mutual masking problem shown in \figname~\ref{fig:path_cutset}c-d comes
%from an extreme test vector combination. In practice, flow paths and cut-sets
%can be scanned to check how many faults can be identified reliably, by
%verifying whether extreme patterns really occur in the test vectors.  In
%addition, these paths and cut-sets can be revised in a ripup and reroute style
%to improve the observation of multiple faults. This extension has not been
%implemented in this framework and will be the future expansion of the
%proposed method.

%The discussion above defines the test vectors as flow paths and cut-sets. The
%flow paths together should cover each valve at least once. Similarly, the
%cut-sets should also cover each valve at least once. In addition, the cut-sets
%should not form a shape that only one additional valve outside of the cut-set
%can be used to form a new cut-set, as in \figname~\ref{fig:path_cutset}d. The
%optimization objective is that the numbers of flow paths and cut-sets should
%be as small as possible
%%because these test vectors are applied one after
%%another in the test process, so that a smaller set of test vectors 
%to reduces test cost. 
%
